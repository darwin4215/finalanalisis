{"version":3,"sources":["LoginPage.js","views/ChatBox.js","views/HomePage.js","views/reportPage.js","views/stillreport.js","views/bandreports.js","views/tasktech.js","App.js","reportWebVitals.js","index.js"],"names":["LoginPage","username","setUsername","useState","password","setPassword","loginMessage","setLoginMessage","captchaValue","setCaptchaValue","navigate","useNavigate","React","createElement","className","onSubmit","async","e","preventDefault","response","fetch","method","headers","Content-Type","body","JSON","stringify","data","json","ok","user","UserName","sessionStorage","setItem","role","ID","state","message","error","type","placeholder","value","onChange","target","ReCAPTCHA","sitekey","href","ChatBox","messages","setMessages","setMessage","isOpen","setIsOpen","Fragment","onClick","map","msg","index","key","text","handleSend","trim","from","HomePage","_location$state","location","useLocation","userRole","getItem","src","alt","ReportPage","formData","setFormData","usuarioId","numeroCuenta","tipoServicio","descripcionProblema","tipoProblema","fechaIncidente","frecuencia","dispositivosAfectados","reinicioModem","pasosTomados","metodoContacto","horarioContacto","useEffect","document","classList","add","remove","storedUserId","prevFormData","handleChange","name","[object Object]","axios","post","console","log","alert","required","StillReport","reports","setReports","userId","get","params","fetchReports","report","Id","DescripcionProblema","TipoProblema","Date","FechaIncidente","toLocaleString","Frecuencia","FechaReporte","Status","toLowerCase","BandReports","loading","setLoading","setError","technicians","setTechnicians","showTechnicians","setShowTechnicians","Error","getStatusClass","status","ticketId","newStatus","prevReports","handleStatusChange","handleAssignClick","tech","technicianId","localStorage","handleTechnicianSelect","TaskTech","tasks","setTasks","fetchTasks","length","task","ticket_id","replace","assigned_date","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.36a54aae.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport ReCAPTCHA from 'react-google-recaptcha';\r\nimport { useNavigate } from 'react-router-dom'; \r\nimport './LoginPage.css';\r\n\r\nconst LoginPage = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loginMessage, setLoginMessage] = useState('');\r\n  const [captchaValue, setCaptchaValue] = useState(null); // Estado para almacenar el valor del CAPTCHA\r\n  const navigate = useNavigate();\r\n\r\n  // Función para manejar el cambio en el CAPTCHA\r\n  const handleCaptchaChange = (value) => {\r\n    setCaptchaValue(value);\r\n  };\r\n\r\n  // Función para manejar el envío del formulario\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Verificar si el CAPTCHA fue completado\r\n    if (!captchaValue) {\r\n      setLoginMessage('Por favor, completa el CAPTCHA');\r\n      return;\r\n    }\r\n\r\n    // Realiza la petición POST a la API de inicio de sesión\r\n    try {\r\n      const response = await fetch('http://localhost:3001/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, password, captchaValue }), // Enviar también el valor del CAPTCHA\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        // Almacenar el rol del usuario y redirigir a la página principal\r\n        setLoginMessage(`Inicio de sesión exitoso, bienvenido ${data.user.UserName}`);\r\n\r\n        // Aquí guardamos el rol del usuario en sessionStorage o localStorage (según prefieras)\r\n        sessionStorage.setItem('userRole', data.user.role);\r\n        sessionStorage.setItem('userId', data.user.ID);\r\n\r\n        setLoginMessage(`Inicio de sesión exitoso, bienvenido ${data.user.UserName}`);\r\n\r\n        // Redirigir a la página de inicio, puedes cambiar esta ruta según tu configuración de rutas\r\n        navigate('/homepage', { state: { role: data.user.role } });\r\n      } else {\r\n        setLoginMessage(data.message);\r\n      }\r\n    } catch (error) {\r\n      setLoginMessage('Error en el servidor. Inténtalo más tarde.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page-unique\">\r\n      <div className=\"left-section-unique\">\r\n        <h1 className=\"welcome-text-unique\">Welcome Back To EXPA&D</h1>\r\n        <p className=\"welcome-description-unique\">\r\n          It is a long established fact that a reader will be distracted by the\r\n          readable content of a page when looking at its layout. The point of using.\r\n        </p>\r\n        <div className=\"social-icons-unique\">\r\n          <i className=\"fab fa-facebook-f\"></i>\r\n          <i className=\"fab fa-twitter\"></i>\r\n          <i className=\"fab fa-instagram\"></i>\r\n          <i className=\"fab fa-youtube\"></i>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"right-section-unique\">\r\n        <h2 className=\"signin-title-unique\">Sign in</h2>\r\n        <form className=\"signin-form-unique\" onSubmit={handleLogin}>\r\n          <input\r\n            className=\"email-input-unique\"\r\n            type=\"text\"\r\n            placeholder=\"Usuario\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <input\r\n            className=\"password-input-unique\"\r\n            type=\"password\"\r\n            placeholder=\"Contraseña\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n\r\n          {/* Integración de reCAPTCHA */}\r\n          <ReCAPTCHA\r\n            sitekey=\"6LddtmIqAAAAAH2KhxkkK8VWJjojEspMhd7KEpa1\" \r\n            onChange={handleCaptchaChange}\r\n          />\r\n\r\n          <button className=\"signin-button-unique\" type=\"submit\">Sign in now</button>\r\n          <button className=\"create-account-button-unique\" type=\"button\">Create An Account</button>\r\n        </form>\r\n\r\n        {loginMessage && <p className=\"login-message\">{loginMessage}</p>}\r\n        <a className=\"lost-password-link-unique\" href=\"#\">Lost your password?</a>\r\n        <p className=\"terms-unique\">\r\n          By clicking on \"Sign in now\" you agree to our <a className=\"terms-link-unique\" href=\"#\">Terms of Service</a> and <a className=\"privacy-link-unique\" href=\"#\">Privacy Policy</a>.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","// src/views/ChatBox.js\r\nimport React, { useState } from \"react\";\r\nimport \"./views.css\";\r\n\r\nconst ChatBox = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleSend = () => {\r\n    if (message.trim()) {\r\n      setMessages([...messages, { text: message, from: \"user\" }]);\r\n      setMessage(\"\"); // Limpiar el input\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className=\"chatbox-toggle\" onClick={() => setIsOpen(!isOpen)}>\r\n        💬\r\n      </button>\r\n\r\n      <div className={`chatbox ${isOpen ? \"open\" : \"closed\"}`}>\r\n        <div className=\"chatbox-header\" onClick={() => setIsOpen(!isOpen)}>\r\n          <h4>Chat</h4>\r\n          <button>{isOpen ? \"Close\" : \"Open\"}</button>\r\n        </div>\r\n        {isOpen && (\r\n          <div className=\"chatbox-body\">\r\n            <div className=\"messages\">\r\n              {messages.map((msg, index) => (\r\n                <div key={index} className=\"message\">\r\n                  {msg.text}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"chatbox-footer\">\r\n              <input\r\n                type=\"text\"\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                placeholder=\"Type a message...\"\r\n              />\r\n              <button onClick={handleSend}>Send</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n","import React from 'react';\r\nimport { useLocation, useNavigate  } from 'react-router-dom';\r\nimport ChatBox from \"./ChatBox\";\r\nimport '../App.css';\r\n\r\nconst HomePage = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const userRole = location.state?.role || sessionStorage.getItem('userRole'); // Obtener el rol desde el estado o sessionStorage\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header className=\"app-header\">\r\n        <img src=\"/logo.png\" alt=\"Logo\" className=\"logo\" />\r\n        <nav className=\"navigation\">\r\n          <ul className=\"nav-list\">\r\n            <li className=\"nav-item-inicio\">Inicio</li>\r\n            <li className=\"nav-item-soporte\">Soporte</li>\r\n            <li className=\"nav-item-faq\">Preguntas Frecuentes</li>\r\n          </ul>\r\n        </nav>\r\n        <div className=\"language-selector\">\r\n          <select className=\"language-select\">\r\n            <option value=\"es\">Español</option>\r\n            <option value=\"en\">English</option>\r\n          </select>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"main-content\">\r\n        <section className=\"welcome-section\">\r\n          <h1 className=\"welcome-title\">¡Bienvenido!</h1>\r\n          <p className=\"welcome-text\">\r\n            Explora y domina: El <span className=\"highlight\">arte</span> de utilizar <span className=\"highlight\">AXPA&D</span>.\r\n          </p>\r\n          <p className=\"welcome-subtext\"><b>Aprende, aplica y triunfa.</b></p>\r\n          <button className=\"start-button\">¡COMENCEMOS!</button>\r\n        </section>\r\n\r\n        <section className=\"cards-section\">\r\n          {/* Siempre mostrar estas 2 cards para cualquier tipo de usuario */}\r\n          <div className=\"card card-reach\" onClick={() => navigate('/reportPage')} >\r\n            <h3>Crear Reporte</h3>\r\n          </div>\r\n          <div className=\"card card-conversations\" onClick={() => navigate('/stillreport')}>\r\n            <h3>Seguimiento de Reporte</h3>\r\n          </div>\r\n\r\n          {/* Solo mostrar estas cards si el usuario es admin */}\r\n          {userRole === 'admin' && (\r\n            <>\r\n              <div className=\"card card-conversations\" onClick={() => navigate('/bandreports')}>\r\n                <h3>Bandeja Reportes</h3>\r\n              </div>\r\n              <div className=\"card card-conversations\">\r\n                <h3>Mientras Tanto</h3>\r\n              </div>\r\n            </>\r\n          )}\r\n          {userRole === 'Tecnico' && (\r\n            <>\r\n              <div className=\"card card-conversations\" onClick={() => navigate('/tasktech')}>\r\n                <h3>Mis Tareas</h3>\r\n              </div>\r\n            </>\r\n          )}\r\n        </section>\r\n      </main>\r\n\r\n      <ChatBox />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","/*here is the form page*/ \r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './views.css'; // Importar los estilos\r\n\r\nconst ReportPage = () => {\r\n  const [formData, setFormData] = useState({\r\n    usuarioId: '', \r\n    numeroCuenta: '',\r\n    tipoServicio: 'Internet',\r\n    descripcionProblema: '',\r\n    tipoProblema: '',\r\n    fechaIncidente: '',\r\n    frecuencia: '',\r\n    dispositivosAfectados: '',\r\n    reinicioModem: '',\r\n    pasosTomados: '',\r\n    metodoContacto: '',\r\n    horarioContacto: '',\r\n  });\r\n  useEffect(() => {\r\n    document.body.classList.add('report-page-background');\r\n    return () => document.body.classList.remove('report-page-background');\r\n  }, []);\r\n  \r\n    // Obtener el usuarioId desde sessionStorage cuando se carga la página\r\n    useEffect(() => {\r\n      const storedUserId = sessionStorage.getItem('userId');\r\n      if (storedUserId) {\r\n        setFormData((prevFormData) => ({\r\n          ...prevFormData,\r\n          usuarioId: storedUserId  // Asignar el ID del usuario al formulario\r\n        }));\r\n      }\r\n    }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/submitReport', formData);\r\n      console.log('Respuesta del servidor:', response.data);\r\n      alert('Reporte enviado con éxito');\r\n    } catch (error) {\r\n      console.error('Error al enviar el formulario:', error);\r\n      alert('Hubo un error al enviar el reporte');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"report-page\">\r\n      <h1 className=\"title\">Reporte de Problemas de Servicio</h1>\r\n      <form onSubmit={handleSubmit} className=\"report-form\">\r\n        \r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">Número de Cuenta:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"numeroCuenta\"\r\n            className=\"form-input\"\r\n            value={formData.numeroCuenta}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">Tipo de Servicio:</label>\r\n          <select\r\n            name=\"tipoServicio\"\r\n            className=\"form-select\"\r\n            value={formData.tipoServicio}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"Internet\">Internet</option>\r\n            <option value=\"TV\">TV</option>\r\n            <option value=\"Teléfono\">Teléfono</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">Descripción del Problema:</label>\r\n          <textarea\r\n            name=\"descripcionProblema\"\r\n            className=\"form-textarea\"\r\n            value={formData.descripcionProblema}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">Tipo de Problema:</label>\r\n          <select\r\n            name=\"tipoProblema\"\r\n            className=\"form-select\"\r\n            value={formData.tipoProblema}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"\">Seleccione</option>\r\n            <option value=\"Conexión lenta\">Conexión lenta</option>\r\n            <option value=\"Corte total del servicio\">Corte total del servicio</option>\r\n            <option value=\"Problemas con el router\">Problemas con el router</option>\r\n            <option value=\"Facturación\">Problemas de facturación</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">Fecha y Hora del Incidente:</label>\r\n          <input\r\n            type=\"datetime-local\"\r\n            name=\"fechaIncidente\"\r\n            className=\"form-input\"\r\n            value={formData.fechaIncidente}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">Frecuencia del Problema:</label>\r\n          <select\r\n            name=\"frecuencia\"\r\n            className=\"form-select\"\r\n            value={formData.frecuencia}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"\">Seleccione</option>\r\n            <option value=\"Constante\">Constante</option>\r\n            <option value=\"Intermitente\">Intermitente</option>\r\n            <option value=\"Ocurrió una vez\">Ocurrió una vez</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">Dispositivos Afectados:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"dispositivosAfectados\"\r\n            className=\"form-input\"\r\n            value={formData.dispositivosAfectados}\r\n            onChange={handleChange}\r\n            placeholder=\"Ej: Laptop, Móvil, Tablet\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">¿Reinició el modem o router?</label>\r\n          <select\r\n            name=\"reinicioModem\"\r\n            className=\"form-select\"\r\n            value={formData.reinicioModem}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"\">Seleccione</option>\r\n            <option value=\"Sí\">Sí</option>\r\n            <option value=\"No\">No</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">¿Qué pasos ha tomado para resolver el problema?</label>\r\n          <textarea\r\n            name=\"pasosTomados\"\r\n            className=\"form-textarea\"\r\n            value={formData.pasosTomados}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">Preferencia de Contacto:</label>\r\n          <select\r\n            name=\"metodoContacto\"\r\n            className=\"form-select\"\r\n            value={formData.metodoContacto}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"\">Seleccione</option>\r\n            <option value=\"Correo\">Correo</option>\r\n            <option value=\"Teléfono\">Teléfono</option>\r\n            <option value=\"Chat\">Chat</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">Mejor horario para contactarle:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"horarioContacto\"\r\n            className=\"form-input\"\r\n            value={formData.horarioContacto}\r\n            onChange={handleChange}\r\n            placeholder=\"Ej: 9am - 12pm\"\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"submit-button\">Enviar Reporte</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './views.css'; // Importar los estilos\r\n\r\nconst StillReport = () => {\r\n  const [reports, setReports] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    document.body.classList.add('still-report-background');\r\n    return () => document.body.classList.remove('still-report-background');\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    const fetchReports = async () => {\r\n      const userId = sessionStorage.getItem('userId'); // Obtener el UsuarioId del sessionStorage\r\n\r\n      if (!userId) {\r\n        console.error('userId no está definido');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get('http://localhost:3001/getReportes', {\r\n          params: { userId }  // Enviar el userId al backend\r\n        });\r\n        setReports(response.data); // Almacenar los datos en el estado\r\n      } catch (error) {\r\n        console.error('Error al obtener los reportes:', error);\r\n      }\r\n    };\r\n\r\n    fetchReports();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"report-header\">Mis Tickets</h1>\r\n      <div className=\"report-container\">\r\n        {reports.map((report) => (\r\n          <div key={report.Id} className=\"ticket-card\">\r\n            <div className=\"ticket-header\">\r\n              Ticket #{report.Id}\r\n            </div>\r\n            <div className=\"ticket-body\">\r\n              <div className=\"ticket-info\">\r\n                <span>Descripción:</span> {report.DescripcionProblema}\r\n              </div>\r\n              <div className=\"ticket-info\">\r\n                <span>Tipo de Problema:</span> {report.TipoProblema}\r\n              </div>\r\n              <div className=\"ticket-info\">\r\n                <span>Fecha del Incidente:</span> {new Date(report.FechaIncidente).toLocaleString()}\r\n              </div>\r\n              <div className=\"ticket-info\">\r\n                <span>Frecuencia:</span> {report.Frecuencia}\r\n              </div>\r\n              <div className=\"ticket-info\">\r\n                <span>Fecha del Reporte:</span> {new Date(report.FechaReporte).toLocaleString()}\r\n              </div>\r\n              <div className=\"ticket-info\">\r\n                <span>Cliente:</span> {report.UserName}\r\n              </div>\r\n            </div>\r\n            <div className={`ticket-status ${report.Status.toLowerCase()}`}>\r\n              {report.Status}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StillReport;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './views.css'; // Importa el archivo CSS\r\n\r\nconst BandReports = () => {\r\n  const [reports, setReports] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [technicians, setTechnicians] = useState([]); // Lista de técnicos\r\n  const [showTechnicians, setShowTechnicians] = useState(null); // Controla si se muestra el selector de técnicos para un ticket específico\r\n\r\n  useEffect(() => {\r\n    const fetchReports = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3001/getTicket');\r\n        \r\n        if (!response.ok) {\r\n          throw new Error('Error al obtener los reportes');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setReports(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchReports();\r\n  }, []);\r\n\r\n  const handleStatusChange = async (ticketId, newStatus) => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/updateStatus', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ ticketId, status: newStatus }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al actualizar el estado');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(data.message);\r\n\r\n      setReports((prevReports) =>\r\n        prevReports.map((report) =>\r\n          report.Id === ticketId ? { ...report, Status: newStatus } : report\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error('Error al actualizar el estado:', error);\r\n    }\r\n  };\r\n\r\n  const getStatusClass = (status) => {\r\n    switch (status) {\r\n      case 'Pendiente':\r\n        return 'status-pendiente';\r\n      case 'En Progreso':\r\n        return 'status-en-progreso';\r\n      case 'Solventado':\r\n        return 'status-solventado';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  // Función para manejar el clic en \"Asignar\"\r\n  const handleAssignClick = async (ticketId) => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/getTechnicians');\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Error al obtener técnicos');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setTechnicians(data); // Guarda los técnicos en el estado\r\n      setShowTechnicians(ticketId); // Muestra el selector para el ticket específico\r\n    } catch (error) {\r\n      console.error('Error al obtener técnicos:', error);\r\n    }\r\n  };\r\n\r\n  // Función para manejar la selección de un técnico y asignar el ticket\r\n  const handleTechnicianSelect = async (technicianId, ticketId) => {\r\n    try {\r\n      // Guardar el ID del técnico en localStorage (opcional)\r\n      localStorage.setItem('selectedTechnician', technicianId);\r\n\r\n      // Hacer la solicitud para asignar el técnico al ticket\r\n      const response = await fetch('http://localhost:3001/assignTechnicianToTask', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ technicianId, ticketId }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al asignar el técnico');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(data.message); // Mostrar mensaje de éxito en la consola\r\n      alert(`Técnico asignado exitosamente: ${data.message}`);\r\n\r\n      // Ocultar el selector después de la asignación\r\n      setShowTechnicians(null);\r\n    } catch (error) {\r\n      console.error('Error al asignar el técnico:', error);\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Cargando reportes...</p>;\r\n  if (error) return <p>Error: {error}</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"centered-title\">Lista de Reportes</h2>\r\n      <ul className=\"report-list\">\r\n        {reports.map((report) => (\r\n          <li key={report.Id} className=\"report-item\">\r\n            <p className=\"report-title\">Ticket #{report.Id}</p>\r\n\r\n            <select\r\n              className=\"report-select\"\r\n              value={report.Status}\r\n              onChange={(e) => handleStatusChange(report.Id, e.target.value)}\r\n            >\r\n              <option value=\"Pendiente\">Pendiente</option>\r\n              <option value=\"En Progreso\">Visto</option>\r\n              <option value=\"Solventado\">Solventado</option>\r\n            </select>\r\n\r\n            <p><strong>Descripción:</strong> {report.DescripcionProblema}</p>\r\n            <p><strong>Tipo de Problema:</strong> {report.TipoProblema}</p>\r\n            <p><strong>Fecha del Incidente:</strong> {report.FechaIncidente}</p>\r\n            <p><strong>Frecuencia:</strong> {report.Frecuencia}</p>\r\n            <p><strong>Cliente:</strong> {report.UserName}</p>\r\n\r\n            <p className={`report-status ${getStatusClass(report.Status)}`}>\r\n              {report.Status}\r\n            </p>\r\n\r\n            {/* Botón Asignar */}\r\n            <button className=\"assign-button\" onClick={() => handleAssignClick(report.Id)}>\r\n              Asignar\r\n            </button>\r\n\r\n            {/* Mostrar lista de técnicos si se presiona \"Asignar\" para este ticket */}\r\n            {showTechnicians === report.Id && (\r\n              <div className=\"technician-list\">\r\n                <p>Seleccionar Técnico:</p>\r\n                <ul>\r\n                  {technicians.map((tech) => (\r\n                    <li key={tech.ID} onClick={() => handleTechnicianSelect(tech.ID, report.Id)}>\r\n                      {tech.name}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BandReports;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './views.css'; // Importa los estilos específicos para TaskTech\r\n\r\nconst TaskTech = () => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const userId = sessionStorage.getItem('userId'); \r\n\r\n    useEffect(() => {\r\n        if (userId) {\r\n            const fetchTasks = async () => {\r\n                try {\r\n                    const response = await axios.get('http://localhost:3001/getTechnicalTasks', {\r\n                        params: { userId }\r\n                    });\r\n                    setTasks(response.data);\r\n                } catch (error) {\r\n                    console.error('Error fetching tasks:', error);\r\n                }\r\n            };\r\n\r\n            fetchTasks();\r\n        } else {\r\n            console.error('No se encontró un userId en sessionStorage');\r\n        }\r\n    }, [userId]);\r\n\r\n    return (\r\n        <div className=\"task-container\">\r\n            <h2 className=\"task-header\">Tareas Técnicas Asignadas</h2>\r\n            {tasks.length > 0 ? (\r\n                tasks.map(task => (\r\n                    <div key={task.ticket_id} className=\"ticket-card\">\r\n                        <h3>Ticket #{task.ticket_id}</h3>\r\n                        <p><strong>Descripción:</strong> {task.DescripcionProblema}</p>\r\n                        <p><strong>Tipo de problema:</strong> {task.TipoProblema}</p>\r\n                        <p><strong>Fecha del Incidente:</strong> {task.FechaIncidente}</p>\r\n                        <p><strong>Frecuencia:</strong> {task.Frecuencia}</p>\r\n                        <p className={`ticket-status ${task.Status.toLowerCase().replace(' ', '-')}`}>\r\n                            {task.Status}\r\n                        </p>\r\n                        <p><strong>Fecha de Asignación:</strong> {task.assigned_date}</p>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No hay tareas asignadas para este usuario.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskTech;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'; \r\nimport './App.css';\r\nimport LoginPage from './LoginPage';\r\nimport HomePage from './views/HomePage';\r\nimport ReportPage from './views/reportPage';\r\nimport StillReport from './views/stillreport';\r\nimport BandReports from './views/bandreports';\r\nimport TaskTech from './views/tasktech'; \r\n// Ajusta el nombre a \"bandreports.js\"\r\n // Asegúrate de que el archivo y ruta sean correctos\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<LoginPage />} />\r\n        <Route path=\"/homepage\" element={<HomePage />} /> \r\n        <Route path=\"/reportPage\" element={<ReportPage />} />\r\n        <Route path=\"/stillReport\" element={<StillReport />} />\r\n        <Route path=\"/bandReports\" element={<BandReports />} /> {/* Nueva ruta para BandReports */}\r\n        <Route path=\"/tasktech\" element={<TaskTech />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}